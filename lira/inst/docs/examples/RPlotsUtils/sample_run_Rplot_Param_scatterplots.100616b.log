
R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1 header = TRUE, sep = "", quote = "\"'",

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("ImgHyp0Hyp1Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp2Hyp3Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp3Hyp4Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgExpMSCntsBkgScaleScatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(BkgScale)',
+ pch=20,
+ xlim=rangeLog10MSCnts,ylim=rangeLog10BkgScale, col='red',
+ cex.main=1.4,cex.lab=1.4)

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("ImgHyp0Hyp1Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp2Hyp3Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp3Hyp4Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgExpMSCntsHyp4Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),IHyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(BkgScale)',
+ pch=20,
+ xlim=rangeLog10MSCnts,ylim=rangeLog10BkgScale, col='red',
+ cex.main=1.4,cex.lab=1.4)

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("ImgHyp0Hyp1Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp2Hyp3Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgHyp3Hyp4Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("ImgExpMSCntsHyp4Scatter.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.2
> rangeLog10MSCnts[2] = 3.4
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Smoothing Hyper-Param 4', #ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.3
> rangeLog10MSCnts[2] = 2.7
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Smoothing Hyper-Param 4', #ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.43
> rangeLog10MSCnts[2] = 2.65
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch=20, col='red',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Smoothing Hyper-Param 4', #ylab='Log10(BkgScale)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> #### Reading in results on Simulated Null Datons:
> infileNulDat0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> #### Reading in results on Simulated Null Datons:
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2_pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2_pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,pch='+',col='blue')

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2_pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMsCnts),log10(N0BkgPrefactor),pch=20,col='yellow')

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.4
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.4
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2_pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='red',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2_pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='red',
+ #xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.0
> rangeLog10MSCnts[2] = 3.0
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = 0.3
> rangeLog10BkgPrefactor[2] = 0.6
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='red',
+ #xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 0.0
> rangeLog10MSCnts[2] = 2.6
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='black',
+ xlim=rangeLog10MSCnts, ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 0.0
> rangeLog10MSCnts[2] = 2.6
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='black',
+ xlim=rangeLog10MSCnts, ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -2.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='black',
+ xlim=rangeLog10MSCnts, ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeLog10MSCnts, ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtSCnts[1] = 0.0

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtCnts[1] = 0.0

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 10.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Sqrt((Expected MS Counts))',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch=20, col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch=20,col='blue')
> points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(sqrt(I1ExpMSCnts)), log10(I1BkgPrefactor),
+ xlab='Sqrt(Sqrt((Expected MS Counts))',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 15.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot((sqrt(I1ExpMSCnts)), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points((sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> points((sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> points((sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> points((sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> points((sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> points((sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> points((sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='blue')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.43
> rangeLog10MSCnts[2] = 2.65
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Smoothing Hyper-Param 4', #ylab='Log10(BkgScale)',
+ pch='+', col='black',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='blue')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='black',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='blue')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='blue')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='blue')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='blue')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd.param'
> infileImgDat2 = '../outputs/PoisDatons32x32EEMC2_NoBckgrnd_2.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> #I1BkgScale <- ImgDat1[[12]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2ExpMSCnts <- ImgDat2[[11]]
> #I2BkgScale <- ImgDat2[[12]]
> 
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.25
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.25
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = 2.43
> rangeLog10MSCnts[2] = 2.65
> 
> rangeLog10BkgScale <- numeric(2)
> rangeLog10BkgScale[1] = 0.38
> rangeLog10BkgScale[2] = 0.42
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img00Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp0,I2Hyp1,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp2,I2Hyp3,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='black',
+ cex.main=1.4,cex.lab=1.4)
> points(I2Hyp3,I2Hyp4,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img00ExpMSCntsHyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(log10(I1ExpMSCnts),I1Hyp4, #log10(I1BkgScale),
+ xlab='Log10(Expected MS Counts)',
+ ylab='Smoothing Hyper-Param 4', #ylab='Log10(BkgScale)',
+ pch='+', col='black',
+ xlim=rangeLog10MSCnts,
+ cex.main=1.4,cex.lab=1.4)
> points(log10(I2ExpMSCnts),I2Hyp4,pch='+',col='blue')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0ExpMSCnts <- ImgDat0[[11]]
> I0BkgPrefactor <- ImgDat0[[12]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1ExpMSCnts <- ImgDat1[[11]]
> I1BkgPrefactor <- ImgDat1[[12]]
> 
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul1 = '../outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul2 = '../outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul3 = '../outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> infileImgNul4 = '../outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param'
> infileImgNul5 = '../outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param'
> 
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0ExpMSCnts <- ImgNul0[[11]]
> N0BkgPrefactor <- ImgNul0[[12]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1ExpMSCnts <- ImgNul1[[11]]
> N1BkgPrefactor <- ImgNul1[[12]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2ExpMSCnts <- ImgNul2[[11]]
> N2BkgPrefactor <- ImgNul2[[12]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3ExpMSCnts <- ImgNul3[[11]]
> N3BkgPrefactor <- ImgNul3[[12]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4ExpMSCnts <- ImgNul4[[11]]
> N4BkgPrefactor <- ImgNul4[[12]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5ExpMSCnts <- ImgNul5[[11]]
> N5BkgPrefactor <- ImgNul5[[12]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img02Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img02ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Iter[1:2],(I1LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration Number',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I2Iter <- ImgDat2[[1]]

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat1[[1]]
> I0LogProb <- ImgDat1[[2]]
> I0ProbStep <- ImgDat1[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat2[[1]]

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration Number',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration Number',
+ ylab=' Log10 Post Prob',
+ #ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I1LogProb[1:2]*log10euler),#type="o",
+ xlab='Iteration Number',
+ ylab=' Log10 Post Prob',
+ #ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I1LogProb[1:1]*log10euler),#type="o",
+ xlab='Iteration Number',
+ ylab=' Log10 Post Prob',
+ #ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04PrelimHyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimHyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04PrelimExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='black')
> dev.off()
null device 
          1 
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> log10euler = log10(exp(1.000000000000))
> 
> ## Iteration 1:
> 
> pdf("Img04PrelimLogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 200, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> pdf("Img04Prelim_TestIters.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],I1Iter[1:10],type="o",
+ xlab='Iteration 0-dat',
+ ylab='Iteration 1-dat',
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> pdf("Img04Prelim_TestIters.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],I1Iter[1:10],type="o",
+ xlab='Iteration 0-dat',
+ ylab='Iteration 1-dat',
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
pdf 
  2 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
pdf 
  2 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='.', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.5
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ##ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> pdf("Img04Prelim_Iter020_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> pdf("Img04Prelim_Iter030_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> pdf("Img04Prelim_Iter040_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> pdf("Img04Prelim_Iter050_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> pdf("Img04Prelim_Iter060_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> pdf("Img04Prelim_Iter070_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> pdf("Img04Prelim_Iter080_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> pdf("Img04Prelim_Iter090_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> pdf("Img04Prelim_Iter100_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> pdf("Img04Prelim_Iter020_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> pdf("Img04Prelim_Iter030_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> pdf("Img04Prelim_Iter040_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> pdf("Img04Prelim_Iter050_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> pdf("Img04Prelim_Iter060_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> pdf("Img04Prelim_Iter070_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> pdf("Img04Prelim_Iter080_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> pdf("Img04Prelim_Iter090_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> pdf("Img04Prelim_Iter100_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> pdf("Img04Prelim_Iter020_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),col="blue",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> pdf("Img04Prelim_Iter030_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> pdf("Img04Prelim_Iter040_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> pdf("Img04Prelim_Iter050_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> pdf("Img04Prelim_Iter060_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> pdf("Img04Prelim_Iter070_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> pdf("Img04Prelim_Iter080_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> pdf("Img04Prelim_Iter090_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> pdf("Img04Prelim_Iter100_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="black",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="blue")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each pdf plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> pdf("Img04Prelim_Iter001_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> pdf("Img04Prelim_Iter002_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> pdf("Img04Prelim_Iter003_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> pdf("Img04Prelim_Iter004_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> pdf("Img04Prelim_Iter005_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> pdf("Img04Prelim_Iter006_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> pdf("Img04Prelim_Iter007_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> pdf("Img04Prelim_Iter008_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> pdf("Img04Prelim_Iter009_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> pdf("Img04Prelim_Iter010_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> pdf("Img04Prelim_Iter020_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> pdf("Img04Prelim_Iter030_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> pdf("Img04Prelim_Iter040_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> pdf("Img04Prelim_Iter050_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> pdf("Img04Prelim_Iter060_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> pdf("Img04Prelim_Iter070_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> pdf("Img04Prelim_Iter080_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> pdf("Img04Prelim_Iter090_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> pdf("Img04Prelim_Iter100_LogProbTimeTrace.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param
+ infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='deepink')

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(I2Hyp3,I2Hyp4,pch='+',col='darkblue')
> points(I3Hyp3,I3Hyp4,pch='+',col='darkslateblue')
> points(I4Hyp3,I4Hyp4,pch='+',col='darkslategray')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkbue')

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(I2Hyp3,I2Hyp4,pch='+',col='darkblue')
> points(I3Hyp3,I3Hyp4,pch='+',col='darkslateblue')
> points(I4Hyp3,I4Hyp4,pch='+',col='darkslategray')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue')
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue')
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=0.5,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp3Hyp4Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp3,I1Hyp4,
+ xlab='Smoothing Hyper-Param 3',
+ ylab='Smoothing Hyper-Param 4',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp3,I0Hyp4,pch='+',col='black')
> points(I2Hyp3,I2Hyp4,pch='+',col='darkblue')
> points(I3Hyp3,I3Hyp4,pch='+',col='darkslateblue')
> points(I4Hyp3,I4Hyp4,pch='+',col='darkslategray')
> points(N0Hyp3,N0Hyp4,pch=20,col='yellow')
> points(N1Hyp3,N1Hyp4,pch=20,col='orange')
> points(N1Hyp3,N1Hyp4,pch=20,col='green')
> points(N3Hyp3,N3Hyp4,pch=20,col='purple')
> points(N4Hyp3,N4Hyp4,pch=20,col='red')
> points(N5Hyp3,N5Hyp4,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue')
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue')
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue')
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue')
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray')
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow')
> points(N1Hyp4,N1Hyp5,pch=20,col='orange')
> points(N1Hyp4,N1Hyp5,pch=20,col='green')
> points(N3Hyp4,N3Hyp5,pch=20,col='purple')
> points(N4Hyp4,N4Hyp5,pch=20,col='red')
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black')
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue')
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue')
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray')
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow')
> points(N1Hyp5,N1Hyp6,pch=20,col='orange')
> points(N1Hyp5,N1Hyp6,pch=20,col='green')
> points(N3Hyp5,N3Hyp6,pch=20,col='purple')
> points(N4Hyp5,N4Hyp6,pch=20,col='red')
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue')
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue')
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.pch=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.pch=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.pch=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue')
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue')
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray')
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow')
> points(N1Hyp4,N1Hyp5,pch=20,col='orange')
> points(N1Hyp4,N1Hyp5,pch=20,col='green')
> points(N3Hyp4,N3Hyp5,pch=20,col='purple')
> points(N4Hyp4,N4Hyp5,pch=20,col='red')
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex.pch=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black')
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue')
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue')
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray')
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow')
> points(N1Hyp5,N1Hyp6,pch=20,col='orange')
> points(N1Hyp5,N1Hyp6,pch=20,col='green')
> points(N3Hyp5,N3Hyp6,pch=20,col='purple')
> points(N4Hyp5,N4Hyp6,pch=20,col='red')
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.pch=0.2,cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black')
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue')
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue')
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue')
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue')
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray')
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow')
> points(N1Hyp4,N1Hyp5,pch=20,col='orange')
> points(N1Hyp4,N1Hyp5,pch=20,col='green')
> points(N3Hyp4,N3Hyp5,pch=20,col='purple')
> points(N4Hyp4,N4Hyp5,pch=20,col='red')
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black')
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue')
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue')
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray')
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow')
> points(N1Hyp5,N1Hyp6,pch=20,col='orange')
> points(N1Hyp5,N1Hyp6,pch=20,col='green')
> points(N3Hyp5,N3Hyp6,pch=20,col='purple')
> points(N4Hyp5,N4Hyp6,pch=20,col='red')
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex=0.02,cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black'.cex=0.02)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black')
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue')
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue')
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray')
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow')
> points(N1Hyp0,N1Hyp1,pch=20,col='orange')
> points(N2Hyp0,N2Hyp1,pch=20,col='green')
> points(N3Hyp0,N3Hyp1,pch=20,col='purple')
> points(N4Hyp0,N4Hyp1,pch=20,col='red')
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black')
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue')
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue')
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray')
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow')
> points(N1Hyp2,N1Hyp3,pch=20,col='orange')
> points(N1Hyp2,N1Hyp3,pch=20,col='green')
> points(N3Hyp2,N3Hyp3,pch=20,col='purple')
> points(N4Hyp2,N4Hyp3,pch=20,col='red')
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black')
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue')
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue')
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray')
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow')
> points(N1Hyp4,N1Hyp5,pch=20,col='orange')
> points(N1Hyp4,N1Hyp5,pch=20,col='green')
> points(N3Hyp4,N3Hyp5,pch=20,col='purple')
> points(N4Hyp4,N4Hyp5,pch=20,col='red')
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black')
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue')
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue')
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray')
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow')
> points(N1Hyp5,N1Hyp6,pch=20,col='orange')
> points(N1Hyp5,N1Hyp6,pch=20,col='green')
> points(N3Hyp5,N3Hyp6,pch=20,col='purple')
> points(N4Hyp5,N4Hyp6,pch=20,col='red')
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex=0.02,cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.02)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue')
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue')
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray')
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.2)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.2)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.2)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.2)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.2)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.2)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.2)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.2)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.2)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.2)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.2)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.2)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.2)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.2)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.2)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.2)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.2)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.2)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex=0.02,cex.main=1.4,cex.lab=1.4,cex=0.2)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.2)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.2)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.2)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.2)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.2)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.2)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.2)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.2)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.2)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.2)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.2)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.2)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.2)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.2)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.2)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.2)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.2)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.2)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.2)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.2)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.2)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.2)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.2)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.2)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.2)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.2)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.2)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.2)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.8,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.8)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.8)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.8)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.8)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.8)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.8)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.8)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.8)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.8)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.8)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.8,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.8)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.8)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.8)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.8)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.8)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.8)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.8)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.8)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.8)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.8)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.8,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.8)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.8)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.8)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.8)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.8)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.8)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.8)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.8)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.8)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.8)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.8,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.8)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.8)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.8)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.8)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.8)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.8)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.8)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.8)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.8)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.8)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.8)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.8)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.8)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.8)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.8)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.8)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.8)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.8)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.8)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.8)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.8)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.4,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.4)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.4)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.4)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.4)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.4)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.4)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.4)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.4)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.4)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.4)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.4,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.4)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.4)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.4)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.4)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.4)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.4)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.4)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.4)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.4)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.4)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.4,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.4)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.4)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.4)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.4)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.4)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.4)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.4)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.4)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.4)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.4)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.4,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.4)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.4)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.4)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.4)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.4)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.4)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.4)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.4)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.4)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.4)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.4)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.4)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.4)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.4)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.4)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.4)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.4)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.4)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.4)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.4)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.4)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.2)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.2)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.2)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.2)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.2)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.2)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.2)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.2)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.2)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.2)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.2)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.2)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.2)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.2)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.2)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.2)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.2,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.2)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.2)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.2)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.2)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.2)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.2)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.2)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.2)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.2)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.2)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.2)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.2)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.2)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.2)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.2)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.2)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.2)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.2)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.2)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.2)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.3,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.3)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.3)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.3)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.3)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.3)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.3)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.3)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.3)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.3)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.3)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.3,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.3)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.3)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.3)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.3)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.3)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.3)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.3)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.3)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.3)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.3)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.3,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.3)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.3)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.3)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.3)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.3)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.3)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.3)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.3)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.3)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.3)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.3,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.3)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.3)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.3)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.3)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.3)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.3)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.3)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.3)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.3)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.3)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.3)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.3)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.3)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.3)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.3)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.3)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.3)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.3)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.3)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.3)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.3)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> histogram(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE', col='blue',

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> histogram(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE, col='blue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4=0.25)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> histogram(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE, col='blue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE, col='blue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),col=magenta,add=TRUE )

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),col='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),col='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each pdf plot:
> ##
> 
> pdf("Img04Hyp0Hyp1Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp2Hyp3Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp4Hyp5Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04Hyp5Hyp6Scatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCntsBkgPrefactorScatter_1_2.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=200,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, break=200,

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=200,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=200,
+ freq=FALSE, border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=75,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=50,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=30,
+ freq=FALSE, col='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',boreder='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Null(pink) vs Data(dark blue)'
+ plot=TRUE, breaks=20,

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and pdf files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> pdf("Img04ExpMSCnts_HistScatter_AllDatvsNull.pdf", onefile=F, height=4.3, width=4.3)
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Null(pink) vs Data(dark blue)',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and jpg files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> jpg("Img04ExpMSCnts_HistScatter_AllDatvsNull.jpg", onefile=F, height=4.3, width=4.3)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCnts_HistScatter_AllDatvsNull.png", height=320, width=320, units="px" )
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Null(pink) vs Data(dark blue)',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" ) )

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp4Hyp5Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp5Hyp6Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 25: ########################################################
> 
> png("Img04Prelim_Iter025_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:25],(I0LogProb[1:25]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:25],(I1LogProb[1:25]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:25],I1Hyp1[1:25],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black')
> lines(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:25],I1Hyp3[1:25],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black')
> lines(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:25],I1Hyp5[1:25],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black')
> lines(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:25]), log10(I1BkgPrefactor[1:25]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> ## Iteration 125: ########################################################
> 
> png("Img04Prelim_Iter125_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:125],(I0LogProb[1:125]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:125],(I1LogProb[1:125]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:125],I1Hyp1[1:125],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black')
> lines(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:125],I1Hyp3[1:125],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black')
> lines(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:125],I1Hyp5[1:125],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black')
> lines(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:125]), log10(I1BkgPrefactor[1:125]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 25: ########################################################
> 
> png("Img04Prelim_Iter025_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:25],(I0LogProb[1:25]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:25],(I1LogProb[1:25]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:25],I1Hyp1[1:25],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black')
> lines(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:25],I1Hyp3[1:25],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black')
> lines(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:25],I1Hyp5[1:25],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black')
> lines(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:25]), log10(I1BkgPrefactor[1:25]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> ## Iteration 125: ########################################################
> 
> png("Img04Prelim_Iter125_LogProbTimeTrace.png", height=320, width=320, units="px" )
> 
> plot(I0Iter[1:125],(I0LogProb[1:125]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:125],(I1LogProb[1:125]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp0[1:125],I1Hyp1[1:125],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black')
> lines(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> plot(I1Hyp2[1:125],I1Hyp3[1:125],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black')
> lines(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp3Hyp4Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4[1:125],I1Hyp5[1:125],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black')
> lines(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:125]), log10(I1BkgPrefactor[1:125]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 25: ########################################################
> 
> png("Img04Prelim_Iter025_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:25],(I0LogProb[1:25]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:25],(I1LogProb[1:25]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:25],I1Hyp1[1:25],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black')
> lines(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:25],I1Hyp3[1:25],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black')
> lines(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:25],I1Hyp5[1:25],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black')
> lines(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:25]), log10(I1BkgPrefactor[1:25]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> ## Iteration 125: ########################################################
> 
> png("Img04Prelim_Iter125_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:125],(I0LogProb[1:125]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:125],(I1LogProb[1:125]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:125],I1Hyp1[1:125],type="o",
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black')
> lines(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:125],I1Hyp3[1:125],type="o",
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black')
> lines(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:125],I1Hyp5[1:125],type="o",
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black')
> lines(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:125]), log10(I1BkgPrefactor[1:125]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cexy.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace_small.png", height=240, width=240, units="px",quality=85 )

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 25: ########################################################
> 
> png("Img04Prelim_Iter025_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:25],(I0LogProb[1:25]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:25],(I1LogProb[1:25]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:25],I1Hyp1[1:25],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black')
> lines(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:25],I1Hyp3[1:25],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black')
> lines(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:25],I1Hyp5[1:25],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black')
> lines(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:25]), log10(I1BkgPrefactor[1:25]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> ## Iteration 125: ########################################################
> 
> png("Img04Prelim_Iter125_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:125],(I0LogProb[1:125]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:125],(I1LogProb[1:125]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:125],I1Hyp1[1:125],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black')
> lines(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:125],I1Hyp3[1:125],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black')
> lines(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp3Hyp4Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:125],I1Hyp5[1:125],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black')
> lines(I0Hyp4[1:125],I0Hyp5[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:125]), log10(I1BkgPrefactor[1:125]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cexy.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp4Hyp5Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Smoothing Hyper-Param 4',
+ ylab='Smoothing Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp5Hyp6Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Smoothing Hyper-Param 5',
+ ylab='Smoothing Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCntsBkgPrefactorScatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Smoothing Hyper-Param 0',
+ ylab='Smoothing Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2.png", height=320, width=320, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Smoothing Hyper-Param 2',
+ ylab='Smoothing Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCnts_HistScatter_AllDatvsNull_small.png", height=240, width=240, units="px" )
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Null(pink) vs Data(dark blue)',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCnts_HistScatter_AllDatvsNull_small.png", height=240, width=240, units="px" )
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Data(dark blue) Null(pink), ',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (dark blues), Null (bright)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (dark blues), Null (bright)',
+ #main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (dark blues), Null (bright)',
+ #main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (dark blues), Null (bright)',
+ #main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (dark blues), Null (bright)',
+ #main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, burn-in taken care of by comment char=#:   ####
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois0to5_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> ##############################################################
> 
> 
> ##############################################################
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCnts_HistScatter_AllDatvsNull_small.png", height=240, width=240, units="px" )
> 
> 
> hist(sqrt(I0ExpMSCnts),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Prob Density',
+ main='Data(dark blue), Null(pink) ',
+ plot=TRUE, breaks=20,
+ freq=FALSE, col='darkblue',border='darkblue',
+ xlim=rangeSqrtMSCnts,
+ cex.main=1.4,cex.lab=1.4)
> hist(sqrt(N0ExpMSCnts),
+ plot=TRUE, breaks=100,
+ freq=FALSE, col='magenta',border='magenta',add=TRUE )
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Nulls=0s.25s,cex.main=1.4,cex.lab=1.4)
+ points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
+ points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> ## Each png plot:
> ##
> 
> png("Img04Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp0,I1Hyp1,
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0,I0Hyp1,pch='+',col='black',cex=0.25)
> points(I2Hyp0,I2Hyp1,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp0,I3Hyp1,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp0,I4Hyp1,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp0,N0Hyp1,pch=20,col='yellow',cex=0.25)
> points(N1Hyp0,N1Hyp1,pch=20,col='orange',cex=0.25)
> points(N2Hyp0,N2Hyp1,pch=20,col='green',cex=0.25)
> points(N3Hyp0,N3Hyp1,pch=20,col='purple',cex=0.25)
> points(N4Hyp0,N4Hyp1,pch=20,col='red',cex=0.25)
> points(N5Hyp0,N5Hyp1,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp2,I1Hyp3,
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Nulls(.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2,I0Hyp3,pch='+',col='black',cex=0.25)
> points(I2Hyp2,I2Hyp3,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp2,I3Hyp3,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp2,I4Hyp3,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp2,N0Hyp3,pch=20,col='yellow',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='orange',cex=0.25)
> points(N1Hyp2,N1Hyp3,pch=20,col='green',cex=0.25)
> points(N3Hyp2,N3Hyp3,pch=20,col='purple',cex=0.25)
> points(N4Hyp2,N4Hyp3,pch=20,col='red',cex=0.25)
> points(N5Hyp2,N5Hyp3,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4,I1Hyp5,
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null(.)
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4,I0Hyp5,pch='+',col='black',cex=0.25)
> points(I2Hyp4,I2Hyp5,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp4,I3Hyp5,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp4,I4Hyp5,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp4,N0Hyp5,pch=20,col='yellow',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='orange',cex=0.25)
> points(N1Hyp4,N1Hyp5,pch=20,col='green',cex=0.25)
> points(N3Hyp4,N3Hyp5,pch=20,col='purple',cex=0.25)
> points(N4Hyp4,N4Hyp5,pch=20,col='red',cex=0.25)
> points(N5Hyp4,N5Hyp5,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5,I1Hyp6,
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null (.)',
+ cex=0.25,cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5,I0Hyp6,pch='+',col='black',cex=0.25)
> points(I2Hyp5,I2Hyp6,pch='+',col='darkblue',cex=0.25)
> points(I3Hyp5,I3Hyp6,pch='+',col='darkslateblue',cex=0.25)
> points(I4Hyp5,I4Hyp6,pch='+',col='darkslategray',cex=0.25)
> points(N0Hyp5,N0Hyp6,pch=20,col='yellow',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='orange',cex=0.25)
> points(N1Hyp5,N1Hyp6,pch=20,col='green',cex=0.25)
> points(N3Hyp5,N3Hyp6,pch=20,col='purple',cex=0.25)
> points(N4Hyp5,N4Hyp6,pch=20,col='red',cex=0.25)
> points(N5Hyp5,N5Hyp6,pch=20,col='magenta',cex=0.25)
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:1],I1Hyp6[1:1],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5[1:1],I0Hyp6[1:1],pch='+',col='black')
> #lines(I0Hyp5[1:1],I0Hyp6[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:2],I1Hyp6[1:2],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:2],I0Hyp6[1:2],pch='+',col='black')
> lines(I0Hyp5[1:2],I0Hyp6[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:3],I1Hyp6[1:3],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:3],I0Hyp6[1:3],pch='+',col='black')
> lines(I0Hyp5[1:3],I0Hyp6[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:4],I1Hyp6[1:4],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:4],I0Hyp6[1:4],pch='+',col='black')
> lines(I0Hyp5[1:4],I0Hyp6[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:5],I1Hyp6[1:5],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:5],I0Hyp6[1:5],pch='+',col='black')
> lines(I0Hyp5[1:5],I0Hyp6[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:6],I1Hyp6[1:6],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:6],I0Hyp6[1:6],pch='+',col='black')
> lines(I0Hyp5[1:6],I0Hyp6[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:7],I1Hyp6[1:7],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:7],I0Hyp6[1:7],pch='+',col='black')
> lines(I0Hyp5[1:7],I0Hyp6[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:8],I1Hyp6[1:8],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:8],I0Hyp6[1:8],pch='+',col='black')
> lines(I0Hyp5[1:8],I0Hyp6[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:9],I1Hyp6[1:9],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:9],I0Hyp6[1:9],pch='+',col='black')
> lines(I0Hyp5[1:9],I0Hyp6[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp35yp46catter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp451:10],I1Hyp6[1:10],type="o",

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^5, so 5 scale params.
> ## Skipping 1st 200 iterations. At thn=1, this is 1st 200 lines of param.:
> 
> infileImgDat0 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Prelim_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> 
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 0, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0Iter <- ImgDat0[[1]]
> I0LogProb <- ImgDat0[[2]]
> I0ProbStep <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1Iter <- ImgDat1[[1]]
> I1LogProb <- ImgDat1[[2]]
> I1ProbStep <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> 
> rangeLog10Prob <- numeric(2)
> rangeLog10Prob[1] = -50100.
> rangeLog10Prob[2] =  -6000.
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.5 #0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.5 #0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 34.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 12.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -1.0
> rangeLog10BkgPrefactor[2] = 0.5
> 
> rangeiter <- numeric(2)
> rangeiter[1] = 0.
> rangeiter[2] = 100.
> log10euler = log10(exp(1.000000000000))
> 
> #--------------------------------------------------------------------------------------#
> # And now the tedious process of making successive plots for more and more iterations:
> #
> 
> #########################################################################
> ## Each png plot:
> ##
> 
> ## Iteration 1: ########################################################
> 
> png("Img04Prelim_Iter001_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:1],(I0LogProb[1:1]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> #lines(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> points(I1Iter[1:1],(I1LogProb[1:1]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:1],I1Hyp1[1:1],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> #lines(I0Hyp0[1:1],I0Hyp1[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:1],I1Hyp3[1:1],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> #lines(I0Hyp2[1:1],I0Hyp3[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:1],I1Hyp6[1:1],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp5[1:1],I0Hyp6[1:1],pch='+',col='black')
> #lines(I0Hyp5[1:1],I0Hyp6[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:1],I1Hyp5[1:1],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> points(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> #lines(I0Hyp4[1:1],I0Hyp5[1:1],pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter001_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:1]), log10(I1BkgPrefactor[1:1]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> points(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> #lines(sqrt(I0ExpMSCnts[1:1]),log10(I0BkgPrefactor[1:1]),pch='+',col='black')
> dev.off()
null device 
          1 
> 
> ## Iteration 2: ########################################################
> 
> png("Img04Prelim_Iter002_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:2],(I0LogProb[1:2]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:2],(I1LogProb[1:2]*log10euler),col="black",pch='+')
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:2],I1Hyp1[1:2],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black')
> lines(I0Hyp0[1:2],I0Hyp1[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:2],I1Hyp3[1:2],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black')
> lines(I0Hyp2[1:2],I0Hyp3[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:2],I1Hyp6[1:2],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:2],I0Hyp6[1:2],pch='+',col='black')
> lines(I0Hyp5[1:2],I0Hyp6[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:2],I1Hyp5[1:2],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black')
> lines(I0Hyp4[1:2],I0Hyp5[1:2],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter002_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:2]), log10(I1BkgPrefactor[1:2]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:2]),log10(I0BkgPrefactor[1:2]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 3: ########################################################
> 
> png("Img04Prelim_Iter003_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:3],(I0LogProb[1:3]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:3],(I1LogProb[1:3]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:3],I1Hyp1[1:3],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black')
> lines(I0Hyp0[1:3],I0Hyp1[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:3],I1Hyp3[1:3],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black')
> lines(I0Hyp2[1:3],I0Hyp3[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:3],I1Hyp6[1:3],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:3],I0Hyp6[1:3],pch='+',col='black')
> lines(I0Hyp5[1:3],I0Hyp6[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:3],I1Hyp5[1:3],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black')
> lines(I0Hyp4[1:3],I0Hyp5[1:3],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter003_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:3]), log10(I1BkgPrefactor[1:3]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:3]),log10(I0BkgPrefactor[1:3]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 4: ########################################################
> 
> png("Img04Prelim_Iter004_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:4],(I0LogProb[1:4]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:4],(I1LogProb[1:4]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:4],I1Hyp1[1:4],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black')
> lines(I0Hyp0[1:4],I0Hyp1[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:4],I1Hyp3[1:4],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black')
> lines(I0Hyp2[1:4],I0Hyp3[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:4],I1Hyp6[1:4],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:4],I0Hyp6[1:4],pch='+',col='black')
> lines(I0Hyp5[1:4],I0Hyp6[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:4],I1Hyp5[1:4],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black')
> lines(I0Hyp4[1:4],I0Hyp5[1:4],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter004_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:4]), log10(I1BkgPrefactor[1:4]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:4]),log10(I0BkgPrefactor[1:4]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 5: ########################################################
> 
> png("Img04Prelim_Iter005_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:5],(I0LogProb[1:5]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:5],(I1LogProb[1:5]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:5],I1Hyp1[1:5],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black')
> lines(I0Hyp0[1:5],I0Hyp1[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:5],I1Hyp3[1:5],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black')
> lines(I0Hyp2[1:5],I0Hyp3[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:5],I1Hyp6[1:5],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:5],I0Hyp6[1:5],pch='+',col='black')
> lines(I0Hyp5[1:5],I0Hyp6[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:5],I1Hyp5[1:5],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black')
> lines(I0Hyp4[1:5],I0Hyp5[1:5],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter005_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:5]), log10(I1BkgPrefactor[1:5]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:5]),log10(I0BkgPrefactor[1:5]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 6: ########################################################
> 
> png("Img04Prelim_Iter006_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:6],(I0LogProb[1:6]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:6],(I1LogProb[1:6]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:6],I1Hyp1[1:6],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black')
> lines(I0Hyp0[1:6],I0Hyp1[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:6],I1Hyp3[1:6],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black')
> lines(I0Hyp2[1:6],I0Hyp3[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:6],I1Hyp6[1:6],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:6],I0Hyp6[1:6],pch='+',col='black')
> lines(I0Hyp5[1:6],I0Hyp6[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:6],I1Hyp5[1:6],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black')
> lines(I0Hyp4[1:6],I0Hyp5[1:6],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter006_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:6]), log10(I1BkgPrefactor[1:6]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:6]),log10(I0BkgPrefactor[1:6]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 7: ########################################################
> 
> png("Img04Prelim_Iter007_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:7],(I0LogProb[1:7]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:7],(I1LogProb[1:7]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:7],I1Hyp1[1:7],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black')
> lines(I0Hyp0[1:7],I0Hyp1[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:7],I1Hyp3[1:7],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black')
> lines(I0Hyp2[1:7],I0Hyp3[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:7],I1Hyp6[1:7],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:7],I0Hyp6[1:7],pch='+',col='black')
> lines(I0Hyp5[1:7],I0Hyp6[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:7],I1Hyp5[1:7],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black')
> lines(I0Hyp4[1:7],I0Hyp5[1:7],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter007_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:7]), log10(I1BkgPrefactor[1:7]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:7]),log10(I0BkgPrefactor[1:7]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 8: ########################################################
> 
> png("Img04Prelim_Iter008_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:8],(I0LogProb[1:8]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:8],(I1LogProb[1:8]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:8],I1Hyp1[1:8],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black')
> lines(I0Hyp0[1:8],I0Hyp1[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:8],I1Hyp3[1:8],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black')
> lines(I0Hyp2[1:8],I0Hyp3[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:8],I1Hyp6[1:8],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:8],I0Hyp6[1:8],pch='+',col='black')
> lines(I0Hyp5[1:8],I0Hyp6[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:8],I1Hyp5[1:8],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black')
> lines(I0Hyp4[1:8],I0Hyp5[1:8],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter008_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:8]), log10(I1BkgPrefactor[1:8]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:8]),log10(I0BkgPrefactor[1:8]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 9: ########################################################
> 
> png("Img04Prelim_Iter009_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:9],(I0LogProb[1:9]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:9],(I1LogProb[1:9]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:9],I1Hyp1[1:9],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black')
> lines(I0Hyp0[1:9],I0Hyp1[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:9],I1Hyp3[1:9],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black')
> lines(I0Hyp2[1:9],I0Hyp3[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:9],I1Hyp6[1:9],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:9],I0Hyp6[1:9],pch='+',col='black')
> lines(I0Hyp5[1:9],I0Hyp6[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:9],I1Hyp5[1:9],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black')
> lines(I0Hyp4[1:9],I0Hyp5[1:9],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter009_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:9]), log10(I1BkgPrefactor[1:9]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:9]),log10(I0BkgPrefactor[1:9]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 10: ########################################################
> 
> png("Img04Prelim_Iter010_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:10],(I0LogProb[1:10]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:10],(I1LogProb[1:10]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:10],I1Hyp1[1:10],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black')
> lines(I0Hyp0[1:10],I0Hyp1[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:10],I1Hyp3[1:10],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black')
> lines(I0Hyp2[1:10],I0Hyp3[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:10],I1Hyp6[1:10],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:10],I0Hyp6[1:10],pch='+',col='black')
> lines(I0Hyp5[1:10],I0Hyp6[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:10],I1Hyp5[1:10],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black')
> lines(I0Hyp4[1:10],I0Hyp5[1:10],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter010_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:10]), log10(I1BkgPrefactor[1:10]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:10]),log10(I0BkgPrefactor[1:10]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> #------------------------------------------------------------------------------#
> 
> ## Iteration 20: ########################################################
> 
> png("Img04Prelim_Iter020_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:20],(I0LogProb[1:20]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:20],(I1LogProb[1:20]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:20],I1Hyp1[1:20],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black')
> lines(I0Hyp0[1:20],I0Hyp1[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:20],I1Hyp3[1:20],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black')
> lines(I0Hyp2[1:20],I0Hyp3[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:20],I1Hyp6[1:20],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:20],I0Hyp6[1:20],pch='+',col='black')
> lines(I0Hyp5[1:20],I0Hyp6[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:20],I1Hyp5[1:20],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black')
> lines(I0Hyp4[1:20],I0Hyp5[1:20],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter020_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:20]), log10(I1BkgPrefactor[1:20]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:20]),log10(I0BkgPrefactor[1:20]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 25: ########################################################
> 
> png("Img04Prelim_Iter025_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:25],(I0LogProb[1:25]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='+',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:25],(I1LogProb[1:25]*log10euler),pch='+',col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:25],I1Hyp1[1:25],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black')
> lines(I0Hyp0[1:25],I0Hyp1[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:25],I1Hyp3[1:25],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black')
> lines(I0Hyp2[1:25],I0Hyp3[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:25],I1Hyp6[1:25],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:25],I0Hyp6[1:25],pch='+',col='black')
> lines(I0Hyp5[1:25],I0Hyp6[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:25],I1Hyp5[1:25],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black')
> lines(I0Hyp4[1:25],I0Hyp5[1:25],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter025_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:25]), log10(I1BkgPrefactor[1:25]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:25]),log10(I0BkgPrefactor[1:25]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 30: ########################################################
> 
> png("Img04Prelim_Iter030_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:30],(I0LogProb[1:30]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:30],(I1LogProb[1:30]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:30],I1Hyp1[1:30],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black')
> lines(I0Hyp0[1:30],I0Hyp1[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:30],I1Hyp3[1:30],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black')
> lines(I0Hyp2[1:30],I0Hyp3[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:30],I1Hyp6[1:30],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:30],I0Hyp6[1:30],pch='+',col='black')
> lines(I0Hyp5[1:30],I0Hyp6[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:30],I1Hyp5[1:30],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black')
> lines(I0Hyp4[1:30],I0Hyp5[1:30],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter030_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:30]), log10(I1BkgPrefactor[1:30]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:30]),log10(I0BkgPrefactor[1:30]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 40: ########################################################
> 
> png("Img04Prelim_Iter040_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:40],(I0LogProb[1:40]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:40],(I1LogProb[1:40]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:40],I1Hyp1[1:40],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black')
> lines(I0Hyp0[1:40],I0Hyp1[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:40],I1Hyp3[1:40],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black')
> lines(I0Hyp2[1:40],I0Hyp3[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:40],I1Hyp6[1:40],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:40],I0Hyp6[1:40],pch='+',col='black')
> lines(I0Hyp5[1:40],I0Hyp6[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:40],I1Hyp5[1:40],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black')
> lines(I0Hyp4[1:40],I0Hyp5[1:40],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter040_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:40]), log10(I1BkgPrefactor[1:40]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:40]),log10(I0BkgPrefactor[1:40]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 50: ########################################################
> 
> png("Img04Prelim_Iter050_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:50],(I0LogProb[1:50]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:50],(I1LogProb[1:50]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:50],I1Hyp1[1:50],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black')
> lines(I0Hyp0[1:50],I0Hyp1[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:50],I1Hyp3[1:50],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black')
> lines(I0Hyp2[1:50],I0Hyp3[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:50],I1Hyp6[1:50],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:50],I0Hyp6[1:50],pch='+',col='black')
> lines(I0Hyp5[1:50],I0Hyp6[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:50],I1Hyp5[1:50],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black')
> lines(I0Hyp4[1:50],I0Hyp5[1:50],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter050_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:50]), log10(I1BkgPrefactor[1:50]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:50]),log10(I0BkgPrefactor[1:50]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 60: ########################################################
> 
> png("Img04Prelim_Iter060_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:60],(I0LogProb[1:60]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:60],(I1LogProb[1:60]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:60],I1Hyp1[1:60],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black')
> lines(I0Hyp0[1:60],I0Hyp1[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:60],I1Hyp3[1:60],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black')
> lines(I0Hyp2[1:60],I0Hyp3[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp5yp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:60],I1Hyp6[1:60],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:60],I0Hy65[1:60],pch='+',col='black')
> lines(I0Hyp5[1:60],I0Hyp6[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_Hyp5yp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:60],I1Hyp5[1:60],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black')
> lines(I0Hyp4[1:60],I0Hyp5[1:60],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter060_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:60]), log10(I1BkgPrefactor[1:60]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:60]),log10(I0BkgPrefactor[1:60]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 70: ########################################################
> 
> png("Img04Prelim_Iter070_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:70],(I0LogProb[1:70]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:70],(I1LogProb[1:70]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:70],I1Hyp1[1:70],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black')
> lines(I0Hyp0[1:70],I0Hyp1[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:70],I1Hyp3[1:70],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black')
> lines(I0Hyp2[1:70],I0Hyp3[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:70],I1Hyp6[1:70],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:70],I0Hyp6[1:70],pch='+',col='black')
> lines(I0Hyp5[1:70],I0Hyp6[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:70],I1Hyp5[1:70],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black')
> lines(I0Hyp4[1:70],I0Hyp5[1:70],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter070_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:70]), log10(I1BkgPrefactor[1:70]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:70]),log10(I0BkgPrefactor[1:70]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 80: ########################################################
> 
> png("Img04Prelim_Iter080_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:80],(I0LogProb[1:80]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:80],(I1LogProb[1:80]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:80],I1Hyp1[1:80],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black')
> lines(I0Hyp0[1:80],I0Hyp1[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:80],I1Hyp3[1:80],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black')
> lines(I0Hyp2[1:80],I0Hyp3[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:80],I1Hyp6[1:80],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:80],I0Hyp6[1:80],pch='+',col='black')
> lines(I0Hyp5[1:80],I0Hyp6[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:80],I1Hyp5[1:80],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black')
> lines(I0Hyp4[1:80],I0Hyp5[1:80],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter080_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:80]), log10(I1BkgPrefactor[1:80]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:80]),log10(I0BkgPrefactor[1:80]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 90: ########################################################
> 
> png("Img04Prelim_Iter090_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:90],(I0LogProb[1:90]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:90],(I1LogProb[1:90]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:90],I1Hyp1[1:90],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black')
> lines(I0Hyp0[1:90],I0Hyp1[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:90],I1Hyp3[1:90],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black')
> lines(I0Hyp2[1:90],I0Hyp3[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:90],I1Hyp6[1:90],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:90],I0Hyp6[1:90],pch='+',col='black')
> lines(I0Hyp5[1:90],I0Hyp6[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:90],I1Hyp5[1:90],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black')
> lines(I0Hyp4[1:90],I0Hyp5[1:90],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter090_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:90]), log10(I1BkgPrefactor[1:90]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:90]),log10(I0BkgPrefactor[1:90]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Iteration 100: ########################################################
> 
> png("Img04Prelim_Iter100_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:100],(I0LogProb[1:100]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:100],(I1LogProb[1:100]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:100],I1Hyp1[1:100],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black')
> lines(I0Hyp0[1:100],I0Hyp1[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:100],I1Hyp3[1:100],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black')
> lines(I0Hyp2[1:100],I0Hyp3[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:100],I1Hyp6[1:100],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:100],I0Hyp6[1:100],pch='+',col='black')
> lines(I0Hyp5[1:100],I0Hyp6[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:100],I1Hyp5[1:100],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black')
> lines(I0Hyp4[1:100],I0Hyp5[1:100],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter100_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:100]), log10(I1BkgPrefactor[1:100]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:100]),log10(I0BkgPrefactor[1:100]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> ## Iteration 125: ########################################################
> 
> png("Img04Prelim_Iter125_LogProbTimeTrace_small.png", height=240, width=240, units="px" )
> 
> plot(I0Iter[1:125],(I0LogProb[1:125]*log10euler),type="o",
+ xlab='Iteration',
+ ylab=' Log10 Post Prob',
+ ylim=rangeLog10Prob,
+ pch='.',col="blue",
+ cex.main=1.4,cex.lab=1.4)
> lines(I1Iter[1:125],(I1LogProb[1:125]*log10euler),col="black")
> 
> dev.off()
null device 
          1 
> 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp0Hyp1Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp0[1:125],I1Hyp1[1:125],type="o",
+ xlab='Tuning Hyper-Param 0',
+ ylab='Tuning Hyper-Param 1',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black')
> lines(I0Hyp0[1:125],I0Hyp1[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp2Hyp3Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> plot(I1Hyp2[1:125],I1Hyp3[1:125],type="o",
+ xlab='Tuning Hyper-Param 2',
+ ylab='Tuning Hyper-Param 3',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black')
> lines(I0Hyp2[1:125],I0Hyp3[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp5Hyp6Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp5[1:125],I1Hyp6[1:125],type="o",
+ xlab='Tuning Hyper-Param 5',
+ ylab='Tuning Hyper-Param 6',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp5[1:125],I0H6p5[1:125],pch='+',col='black')
> lines(I0Hyp5[1:125],I0Hyp6[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_Hyp4Hyp5Scatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(I1Hyp4[1:125],I1Hyp5[1:125],type="o",
+ xlab='Tuning Hyper-Param 4',
+ ylab='Tuning Hyper-Param 5',
+ xlim=xrangeImg, ylim=yrangeImg,
+ pch='+', col='blue',
+ #main='Data (+)',
+ cex.main=1.4,cex.lab=1.4)
> #points(I0Hyp4[1:125],I0H6p5[1:125],pch='+',col='black')
> lines(I0Hyp5[1:125],I0Hyp5[1:125],pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> ## Next File:
> ##
> 
> png("Img04Prelim_Iter125_ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> 
> plot(sqrt(I1ExpMSCnts[1:125]), log10(I1BkgPrefactor[1:125]),type="o",
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ #main='Data (+)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cexy.main=1.4,cex.lab=1.4)
> #points(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black')
> lines(sqrt(I0ExpMSCnts[1:125]),log10(I0BkgPrefactor[1:125]),pch='+',col='black',type="o")
> dev.off()
null device 
          1 
> 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> 
> ## Next File:
> ##
> 
> png("TstArrows04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> xarrows    <- numeric(2)
> yarrows    <- numeric(2)
> xarrows[1] = rangeSqrtMSCnts[1] + 0.8*(rangeSqrtMSCnts[2]-rangeSqrtMSCnts[1])
> xarrows[2] = xarrows[1]
> yarrows[1] = rangeLog10BkgPrefactor[1]
> yarrows[2] = rangeLog10BkgPrefactor[1] + 0.8*(rangeLog10BkgPrefactor[2]-rangeLog10BkgPrefactor[1])
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> arrows(xarrows[1], yarrows[1], xarrows[2], y[arrows[2], angle = 30, code = 2, col= 1:3)

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> 
> ## Next File:
> ##
> 
> png("TstArrows04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> xarrows    <- numeric(2)
> yarrows    <- numeric(2)
> xarrows[1] = rangeSqrtMSCnts[1] + 0.8*(rangeSqrtMSCnts[2]-rangeSqrtMSCnts[1])
> xarrows[2] = xarrows[1]
> yarrows[1] = rangeLog10BkgPrefactor[1]
> yarrows[2] = rangeLog10BkgPrefactor[1] + 0.8*(rangeLog10BkgPrefactor[2]-rangeLog10BkgPrefactor[1])
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> arrows(xarrows[1], yarrows[1], xarrows[2], yarrows[2], angle = 30, code = 2, col='orange')
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 

R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> #####    Making and png files of the specified data
> ##
> 
> ##
> ## In this example, assuming size=32 = 2^7, so 7 scale params.
> 
> infileImgDat0 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.01_viaFits.param'
> infileImgDat1 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.05_viaFits.param'
> infileImgDat2 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt0.50_viaFits.param'
> infileImgDat3 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1.00_viaFits.param'
> infileImgDat4 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt1obs_viaFits.param'
> #infileImgDat5 = '../outputs/Simple04_Gauss2d1.5_PoisDatons128x128testEvsNull_Strt2obs_viaFits.param'
> 
> ## In reading in, skip=40 assumes:                                  ####
> ## 28 header lines, 1 labels line, 10 [ie 100 iters] for burn-in:   ####
> 
> ImgDat1 <- read.table(infileImgDat1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat0 <- read.table(infileImgDat0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat2 <- read.table(infileImgDat2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat3 <- read.table(infileImgDat3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgDat4 <- read.table(infileImgDat4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> #### Putting the results on data into arrays:
> 
> I0LogProb <- ImgDat0[[3]]
> I0SpinRow <- ImgDat0[[4]]
> I0SpinCol <- ImgDat0[[5]]
> I0Hyp0 <- ImgDat0[[6]]
> I0Hyp1 <- ImgDat0[[7]]
> I0Hyp2 <- ImgDat0[[8]]
> I0Hyp3 <- ImgDat0[[9]]
> I0Hyp4 <- ImgDat0[[10]]
> I0Hyp5 <- ImgDat0[[11]]
> I0Hyp6 <- ImgDat0[[12]]
> I0ExpMSCnts <- ImgDat0[[13]]
> I0BkgPrefactor <- ImgDat0[[14]]
> 
> I1LogProb <- ImgDat1[[3]]
> I1SpinRow <- ImgDat1[[4]]
> I1SpinCol <- ImgDat1[[5]]
> I1Hyp0 <- ImgDat1[[6]]
> I1Hyp1 <- ImgDat1[[7]]
> I1Hyp2 <- ImgDat1[[8]]
> I1Hyp3 <- ImgDat1[[9]]
> I1Hyp4 <- ImgDat1[[10]]
> I1Hyp5 <- ImgDat1[[11]]
> I1Hyp6 <- ImgDat1[[12]]
> I1ExpMSCnts <- ImgDat1[[13]]
> I1BkgPrefactor <- ImgDat1[[14]]
> 
> I2LogProb <- ImgDat2[[3]]
> I2SpinRow <- ImgDat2[[4]]
> I2SpinCol <- ImgDat2[[5]]
> I2Hyp0 <- ImgDat2[[6]]
> I2Hyp1 <- ImgDat2[[7]]
> I2Hyp2 <- ImgDat2[[8]]
> I2Hyp3 <- ImgDat2[[9]]
> I2Hyp4 <- ImgDat2[[10]]
> I2Hyp5 <- ImgDat2[[11]]
> I2Hyp6 <- ImgDat2[[12]]
> I2ExpMSCnts <- ImgDat2[[13]]
> I2BkgPrefactor <- ImgDat2[[14]]
> 
> I3LogProb <- ImgDat3[[3]]
> I3SpinRow <- ImgDat3[[4]]
> I3SpinCol <- ImgDat3[[5]]
> I3Hyp0 <- ImgDat3[[6]]
> I3Hyp1 <- ImgDat3[[7]]
> I3Hyp2 <- ImgDat3[[8]]
> I3Hyp3 <- ImgDat3[[9]]
> I3Hyp4 <- ImgDat3[[10]]
> I3Hyp5 <- ImgDat3[[11]]
> I3Hyp6 <- ImgDat3[[12]]
> I3ExpMSCnts <- ImgDat3[[13]]
> I3BkgPrefactor <- ImgDat3[[14]]
> 
> I4LogProb <- ImgDat4[[3]]
> I4SpinRow <- ImgDat4[[4]]
> I4SpinCol <- ImgDat4[[5]]
> I4Hyp0 <- ImgDat4[[6]]
> I4Hyp1 <- ImgDat4[[7]]
> I4Hyp2 <- ImgDat4[[8]]
> I4Hyp3 <- ImgDat4[[9]]
> I4Hyp4 <- ImgDat4[[10]]
> I4Hyp5 <- ImgDat4[[11]]
> I4Hyp6 <- ImgDat4[[12]]
> I4ExpMSCnts <- ImgDat4[[13]]
> I4BkgPrefactor <- ImgDat4[[14]]
> 
> 
> #### Reading in results on Simulated Null Datons:
> 
> infileImgNul0 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois00_128x128testEvsNullModel.param'
> infileImgNul1 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois01_128x128testEvsNullModel.param'
> infileImgNul2 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois02_128x128testEvsNullModel.param'
> infileImgNul3 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois03_128x128testEvsNullModel.param'
> infileImgNul4 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois04_128x128testEvsNullModel.param'
> infileImgNul5 = '../outputs/Simple04_Gauss2dSig1.5_17x17PSF_SimPois05_128x128testEvsNullModel.param'
> 
> 
> ImgNul0 <- read.table(infileImgNul0, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul1 <- read.table(infileImgNul1, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul2 <- read.table(infileImgNul2, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul3 <- read.table(infileImgNul3, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul4 <- read.table(infileImgNul4, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> ImgNul5 <- read.table(infileImgNul5, header = TRUE, sep = "", quote = "\"'",
+            na.strings = "NA", colClasses = NA, nrows = -1,
+            skip = 40, check.names = TRUE,
+            comment.char = "#",
+            allowEscapes = FALSE, flush = FALSE,
+            encoding = "unknown")
> 
> 
> ########## And arrays from results vs Null Datons: #########
> 
> N0LogProb <- ImgNul0[[3]]
> N0SpinRow <- ImgNul0[[4]]
> N0SpinCol <- ImgNul0[[5]]
> N0Hyp0 <- ImgNul0[[6]]
> N0Hyp1 <- ImgNul0[[7]]
> N0Hyp2 <- ImgNul0[[8]]
> N0Hyp3 <- ImgNul0[[9]]
> N0Hyp4 <- ImgNul0[[10]]
> N0Hyp5 <- ImgNul0[[11]]
> N0Hyp6 <- ImgNul0[[12]]
> N0ExpMSCnts <- ImgNul0[[13]]
> N0BkgPrefactor <- ImgNul0[[14]]
> 
> N1LogProb <- ImgNul1[[3]]
> N1SpinRow <- ImgNul1[[4]]
> N1SpinCol <- ImgNul1[[5]]
> N1Hyp0 <- ImgNul1[[6]]
> N1Hyp1 <- ImgNul1[[7]]
> N1Hyp2 <- ImgNul1[[8]]
> N1Hyp3 <- ImgNul1[[9]]
> N1Hyp4 <- ImgNul1[[10]]
> N1Hyp5 <- ImgNul1[[11]]
> N1Hyp6 <- ImgNul1[[12]]
> N1ExpMSCnts <- ImgNul1[[13]]
> N1BkgPrefactor <- ImgNul1[[14]]
> 
> N2LogProb <- ImgNul2[[3]]
> N2SpinRow <- ImgNul2[[4]]
> N2SpinCol <- ImgNul2[[5]]
> N2Hyp0 <- ImgNul2[[6]]
> N2Hyp1 <- ImgNul2[[7]]
> N2Hyp2 <- ImgNul2[[8]]
> N2Hyp3 <- ImgNul2[[9]]
> N2Hyp4 <- ImgNul2[[10]]
> N2Hyp5 <- ImgNul2[[11]]
> N2Hyp6 <- ImgNul2[[12]]
> N2ExpMSCnts <- ImgNul2[[13]]
> N2BkgPrefactor <- ImgNul2[[14]]
> 
> N3LogProb <- ImgNul3[[3]]
> N3SpinRow <- ImgNul3[[4]]
> N3SpinCol <- ImgNul3[[5]]
> N3Hyp0 <- ImgNul3[[6]]
> N3Hyp1 <- ImgNul3[[7]]
> N3Hyp2 <- ImgNul3[[8]]
> N3Hyp3 <- ImgNul3[[9]]
> N3Hyp4 <- ImgNul3[[10]]
> N3Hyp5 <- ImgNul3[[11]]
> N3Hyp6 <- ImgNul3[[12]]
> N3ExpMSCnts <- ImgNul3[[13]]
> N3BkgPrefactor <- ImgNul3[[14]]
> 
> N4LogProb <- ImgNul4[[3]]
> N4SpinRow <- ImgNul4[[4]]
> N4SpinCol <- ImgNul4[[5]]
> N4Hyp0 <- ImgNul4[[6]]
> N4Hyp1 <- ImgNul4[[7]]
> N4Hyp2 <- ImgNul4[[8]]
> N4Hyp3 <- ImgNul4[[9]]
> N4Hyp4 <- ImgNul4[[10]]
> N4Hyp5 <- ImgNul4[[11]]
> N4Hyp6 <- ImgNul4[[12]]
> N4ExpMSCnts <- ImgNul4[[13]]
> N4BkgPrefactor <- ImgNul4[[14]]
> 
> N5LogProb <- ImgNul5[[3]]
> N5SpinRow <- ImgNul5[[4]]
> N5SpinCol <- ImgNul5[[5]]
> N5Hyp0 <- ImgNul5[[6]]
> N5Hyp1 <- ImgNul5[[7]]
> N5Hyp2 <- ImgNul5[[8]]
> N5Hyp3 <- ImgNul5[[9]]
> N5Hyp4 <- ImgNul5[[10]]
> N5Hyp5 <- ImgNul5[[11]]
> N5Hyp6 <- ImgNul5[[12]]
> N5ExpMSCnts <- ImgNul5[[13]]
> N5BkgPrefactor <- ImgNul5[[14]]
> 
> 
> 
> ############# Plotting both:
> 
> xrangeImg <- numeric(2)
> yrangeImg <- numeric(2)
> xrangeImg[1] = 0.
> xrangeImg[2] = 0.22
> yrangeImg[1] = 0.
> yrangeImg[2] = 0.22
> 
> 
> rangeLog10MSCnts <- numeric(2)
> rangeLog10MSCnts[1] = -1.0
> rangeLog10MSCnts[2] = 2.5
> 
> rangeSqrtMSCnts <- numeric(2)
> rangeSqrtMSCnts[1] = 0.0
> rangeSqrtMSCnts[2] = 14.
> 
> rangeSqrtSqrtMSCnts <- numeric(2)
> rangeSqrtSqrtMSCnts[1] = 0.0
> rangeSqrtSqrtMSCnts[2] = 4.
> 
> rangeLog10BkgPrefactor <- numeric(2)
> rangeLog10BkgPrefactor[1] = -0.05
> rangeLog10BkgPrefactor[2] = 0.05
> 
> 
> ## Next File:
> ##
> 
> png("TstArrows04ExpMSCntsBkgPrefactorScatter_1_2_small.png", height=240, width=240, units="px" )
> 
> xarrows    <- numeric(2)
> yarrows    <- numeric(2)
> xarrows[1] = rangeSqrtMSCnts[1] + 0.8*(rangeSqrtMSCnts[2]-rangeSqrtMSCnts[1])
> xarrows[2] = xarrows[1]
> yarrows[1] = rangeLog10BkgPrefactor[1] - 0.2*(rangeLog10BkgPrefactor[2]-rangeLog10BkgPrefactor[1])
> yarrows[2] = rangeLog10BkgPrefactor[1] + 0.8*(rangeLog10BkgPrefactor[2]-rangeLog10BkgPrefactor[1])
> 
> plot(sqrt(I1ExpMSCnts), log10(I1BkgPrefactor),
+ xlab='Sqrt(Expected MS Counts)',
+ ylab='Log10(Bkg Pre-Factor)',
+ pch='+', col='blue',
+ main='Data (darks), Nulls (brights)',
+ #main='Data (+), Null (.)',
+ xlim=rangeSqrtMSCnts,
+ ylim=rangeLog10BkgPrefactor,
+ cex.main=1.4,cex.lab=1.4,cex=0.25)
> points(sqrt(I0ExpMSCnts),log10(I0BkgPrefactor),pch='+',col='black',cex=0.25)
> points(sqrt(I2ExpMSCnts),log10(I2BkgPrefactor),pch='+',col='darkblue',cex=0.25)
> points(sqrt(I3ExpMSCnts),log10(I3BkgPrefactor),pch='+',col='darkslateblue',cex=0.25)
> points(sqrt(I4ExpMSCnts),log10(I4BkgPrefactor),pch='+',col='darkslategray',cex=0.25)
> points(sqrt(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange',cex=0.25)
> points(sqrt(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green',cex=0.25)
> points(sqrt(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple',cex=0.25)
> points(sqrt(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red',cex=0.25)
> points(sqrt(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta',cex=0.25)
> arrows(xarrows[1], yarrows[1], xarrows[2], yarrows[2], angle = 30, code = 2, col='orange', lwd=4)
> #points(sqrt(sqrt(I0ExpMSCnts)),log10(I0BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I2ExpMSCnts)),log10(I2BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I3ExpMSCnts)),log10(I3BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(I4ExpMSCnts)),log10(I4BkgPrefactor),pch='+',col='black')
> #points(sqrt(sqrt(N0ExpMSCnts)),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(sqrt(sqrt(N1ExpMSCnts)),log10(N1BkgPrefactor),pch=20,col='green')
> #points(sqrt(sqrt(N3ExpMSCnts)),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(sqrt(sqrt(N4ExpMSCnts)),log10(N4BkgPrefactor),pch=20,col='red')
> #points(sqrt(sqrt(N5ExpMSCnts)),log10(N5BkgPrefactor),pch=20,col='magenta')
> #points(log10(I0ExpMSCnts),log10(I0BkgPrefactor),pch=20,col='blue')
> #points(log10(N0ExpMSCnts),log10(N0BkgPrefactor),pch=20,col='yellow')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='orange')
> #points(log10(N1ExpMSCnts),log10(N1BkgPrefactor),pch=20,col='green')
> #points(log10(N3ExpMSCnts),log10(N3BkgPrefactor),pch=20,col='purple')
> #points(log10(N4ExpMSCnts),log10(N4BkgPrefactor),pch=20,col='red')
> #points(log10(N5ExpMSCnts),log10(N5BkgPrefactor),pch=20,col='magenta')
> dev.off()
null device 
          1 
> 
> 
