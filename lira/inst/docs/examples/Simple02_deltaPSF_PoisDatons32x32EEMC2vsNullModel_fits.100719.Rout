
R version 2.7.0 (2008-04-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(lira)
> require(FITSio)
Loading required package: FITSio
Warning message:
package 'FITSio' was built under R version 2.7.2 
> 
> obsfile = "exampledata/PoisDatonsEEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> bkgdfile = "exampledata/NullModelEEMC2_32x32testE.090120c.fits"
> bkgd <- readFITS(bkgdfile)
> bkgdmat <- matrix(data=bkgd$imDat, nrow=bkgd$axDat$len[1], ncol=bkgd$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_1.00.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> ### First run to look at burn-in, autocorrealtion:
> ###
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.out",
+   param.file="outputs/Prelim_PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=2000, thin=1,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 2000, every 1th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> ### Now doing analysis runs:
> ###
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.out",
+   param.file="outputs/PoisDatons32x32EEMC2vsNullModel_Strt1.00_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=2000, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 2000, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisDatonsEEMC2_32x32testEvsNullModel_Strt1.00_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> 
> strtfile = "exampledata/start32x32_0.01.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.out",
+   param.file="outputs/PoisDatons32x32EEMC2vsNullModel_Strt0.01_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=2000, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 2000, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisDatonsEEMC2_32x32testEvsNullModel_Strt0.01_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> ########### Now do the same for "Null" datons --
> ## That is, for 1/2 dozen or so Poisson realizations
> ## of the Null or baseline model.
> ## Here we do just two, but it should be several at least:
> ##
> 
> obsfile = "exampledata/PoisNulDat0EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_1.00.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.out",
+   param.file="outputs/PoisNulDat032x32EEMC2vsNullModel_Strt1.00_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat0EEMC2_32x32testEvsNullModel_Strt1.00_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> obsfile = "exampledata/PoisNulDat1EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_0.01.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.out",
+   param.file="outputs/PoisNulDat132x32EEMC2vsNullModel_Strt0.01_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat1EEMC2_32x32testEvsNullModel_Strt0.01_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> 
> obsfile = "exampledata/PoisNulDat2EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_1.00.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.out",
+   param.file="outputs/PoisNulDat232x32EEMC2vsNullModel_Strt1.00_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat2EEMC2_32x32testEvsNullModel_Strt1.00_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> obsfile = "exampledata/PoisNulDat3EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_0.01.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.out",
+   param.file="outputs/PoisNulDat332x32EEMC2vsNullModel_Strt0.01_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat3EEMC2_32x32testEvsNullModel_Strt0.01_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> 
> obsfile = "exampledata/PoisNulDat4EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_1.00.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.out",
+   param.file="outputs/PoisNulDat432x32EEMC2vsNullModel_Strt1.00_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat4EEMC2_32x32testEvsNullModel_Strt1.00_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> obsfile = "exampledata/PoisNulDat5EEMC2_32x32testE.090120c.fits"
> obs <- readFITS(obsfile)
> obsmat <- matrix(data=obs$imDat, nrow=obs$axDat$len[1], ncol=obs$axDat$len[2] )
> 
> strtfile = "exampledata/start32x32_0.01.fits"
> strt <- readFITS(strtfile)
> strtmat <- matrix(data=strt$imDat, nrow=strt$axDat$len[1], ncol=strt$axDat$len[2] )
> 
> img <- lira(
+   obs.matrix = obsmat,
+   bkg.matrix = bkgdmat,
+   start.matrix= strtmat,
+   out.file = "outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.out",
+   param.file="outputs/PoisNulDat532x32EEMC2vsNullModel_Strt0.01_viaFits.param",
+   mcmc=TRUE, 
+   max.iter=700, thin=5,
+   burn=0,
+   alpha.init=c(3,4,5,6,7))

Code will run in posterior sampling mode.

A scale parameter will be fit to the bkg model.

The total number of Gibbs draws is 700, every 5th draws will be saved.

The model will be fit using the Multi Scale Prior.

The data matrix is 32 by 32.

The data file should contain a  2^5 by 2^5 matrix of counts.

Starting Values for the smoothing parameter (alpha):
Aggregation Level:  0,   alpha: 3 (Full Data)
Aggregation Level:  1,   alpha: 4
Aggregation Level:  2,   alpha: 5
Aggregation Level:  3,   alpha: 6
Aggregation Level:  4,   alpha: 7  (In the 2x2 table)

The prior distribution on the total count from the multiscale component is
Gamma(1.000000, 0.050000).

The hyper-prior smoothing parameter (kappa 2) is 1000.

> 
> pdf("outputs/PoisNulDat5EEMC2_32x32testEvsNullModel_Strt0.01_viaFits_images.pdf", width=12, height=4.25)
> par(mfrow=c(1,3))
> image(obsmat, xaxt="n", yaxt="n", main="Observed Data")
> image(bkgdmat, xaxt="n", yaxt="n", main="Background/BestFit/Null Model")
> image(img$final, xaxt="n", yaxt="n", main="Mean MultiScale of Data/Null Mis-Match")
> dev.off()
null device 
          1 
> 
> 
> proc.time()
    user   system  elapsed 
1609.427    5.464 1670.413 
